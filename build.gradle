buildscript {
    repositories { 
        jcenter()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE'
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.2.0'
        //classpath 'org.sonarqube.gradle:gradle-sonarqube-plugin:1.1'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE'
     }
}

apply plugin: 'jacoco'
//apply plugin: 'org.sonarqube'

//sonarqube {
//    properties {
//        property 'sonar.host.url', 'http://dev-server/sonar'
//        property 'sonar.sourceEncoding', 'UTF-8'
//        property 'sonar.jacoco.itReportPath', 'build/jacoco/integrationTest.exec'
//        property 'sonar.branch', System.getenv('CI_BUILD_REF_NAME')
//        property 'sonar.projectVersion', new Date().format('yyyyMMdd-HHmmss')
//    }
//}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.unbroken-dome.test-sets'
    apply plugin: 'io.spring.dependency-management'
    
    repositories { 
        jcenter()
    }
    
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    dependencyManagement {
        imports {
            mavenBom 'io.spring.platform:platform-bom:2.0.1.RELEASE'
        }
        dependencies {
            dependencySet (group: 'com.sun.faces', version: '2.2.12') {
                entry 'jsf-api'
                entry 'jsf-impl'
            }
        }
    }
        
    jacoco { 
        toolVersion = '0.7.5.201505241946' 
    }

    testSets { 
        integrationTest { 
            dirName = 'test-integration' 
        }
    }

    dependencies {
        compile 'org.springframework.boot:spring-boot-starter'
        compile('org.springframework.boot:spring-boot-starter-web') {
            exclude module: 'spring-boot-starter-tomcat'
        }
        compile 'org.springframework.boot:spring-boot-starter-undertow'
        compile 'io.undertow:undertow-core:1.3.12.Final'
        compile 'io.undertow:undertow-servlet:1.3.12.Final'
        
        compile 'com.sun.faces:jsf-api'
        compile 'com.sun.faces:jsf-impl'
        //compile 'org.glassfish:javax.el:3.0.0'
    
        //testCompile 'org.springframework.boot:spring-boot-starter-test'

        integrationTestCompile sourceSets.test.output
    }

    test {
        testLogging { 
            exceptionFormat 'full' 
        }
        jacoco {
            destinationFile = file("$buildDir/jacoco/${name}.exec")
        }
        reports {
            html.enabled = false
            junitXml.enabled = true
        }

        outputs.upToDateWhen { false }
    }

    integrationTest {
        testLogging { 
            exceptionFormat 'full' 
        }
        jacoco {
            destinationFile = file("$buildDir/jacoco/${name}.exec")
        }
        reports {
            html.enabled = false
            junitXml.enabled = true
        }

        outputs.upToDateWhen { false }
    }

    check.dependsOn integrationTest
    integrationTest.mustRunAfter test
}

//project.tasks.sonarqube.dependsOn subprojects*.integrationTest
